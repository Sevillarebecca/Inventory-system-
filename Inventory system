package InventorySystem7;

import java.util.Scanner;

public class InventorySystem7 {

    private static final int INITIAL_STOCK = 100;

    public static void main(String[] args) {

        Scanner input = new Scanner(System.in);

        String username;
        String password;
        int ID;

        System.out.println("Login ---->");

        System.out.print("Enter username: ");
        username = input.nextLine();

        System.out.print("Enter password: ");
        password = input.nextLine();

        System.out.print("Enter ID number: ");
        ID = input.nextInt();

        System.out.println("\nWelcome!");

        System.out.print("\nHello " + username + ".");

        double total = 0.0;

        int[] stocks = new int[]{INITIAL_STOCK, INITIAL_STOCK, INITIAL_STOCK, INITIAL_STOCK, INITIAL_STOCK, INITIAL_STOCK, INITIAL_STOCK, INITIAL_STOCK};

        while (true) {
            System.out.println("\n\nMAIN MENU");
            System.out.println("[1] Burger");
            System.out.println("[2] Burger Steak");
            System.out.println("[3] Chicken");
            System.out.println("[4] Spaghetti");
            System.out.println("[5] Chicken Sandwich");
            System.out.println("[6] Hotdog");
            System.out.println("[7] Fries");
            System.out.println("[8] Beverages");
            System.out.println("\n\n[9] Delete Item");

            System.out.print("\nEnter your choice: ");
            int choice = input.nextInt();

            if (choice == 9) {
                deleteItem(input, stocks);
                continue;
            }

            if (choice < 1 || choice > 8) {
                System.out.println("\nInvalid choice. Please try again.");
                continue;
            }

            double itemTotal = processCategory(choice, input, stocks);
            total += itemTotal;
            System.out.println("Subtotal: " + itemTotal);

            System.out.print("\nWould you like to add more, \ndelete an item, or finish ordering? \n(A(ADD)/D(DELETE)/F(FINISH)): ");
            String continueOrdering = input.next();
            if (continueOrdering.equalsIgnoreCase("F")) {
                break;
            } else if (continueOrdering.equalsIgnoreCase("D")) {
                deleteItem(input, stocks);
            }
        }

        System.out.println("\n[Payment]");
        System.out.println("Total: " + total);
        double payment = processPayment(total, input);

        updateInventoryStock(stocks);
        
        printReceipt(username, ID, total, payment);
    }

    public static double processCategory(int category, Scanner scanner, int[] stocks) {
        double[] prices = {};
        String[] itemNames = {};

        switch (category) {
        case 1:
        prices = new double[]{32.00, 35.00, 30.00, 38.00, 40.00, 25.00, 25.00, 20.00};
        itemNames = new String[]{"Burgers", "Burger Steak", "Chicken", "Spaghetti", "Chicken Sandwich", "Hotdog", "Fries", "Beverages"};
        break;
        case 2:
        prices = new double[]{32.00, 35.00, 30.00, 38.00, 40.00, 25.00, 25.00, 20.00};
        itemNames = new String[]{"Burgers", "Burger Steak", "Chicken", "Spaghetti", "Chicken Sandwich", "Hotdog", "Fries", "Beverages"};
        break;
        case 3:
        prices = new double[]{32.00, 35.00, 30.00, 38.00, 40.00, 25.00, 25.00, 20.00};
        itemNames = new String[]{"Burgers", "Burger Steak", "Chicken", "Spaghetti", "Chicken Sandwich", "Hotdog", "Fries", "Beverages"};
        break;
        case 4:
        prices = new double[]{32.00, 35.00, 30.00, 38.00, 40.00, 25.00, 25.00, 20.00};
        itemNames = new String[]{"Burgers", "Burger Steak", "Chicken", "Spaghetti", "Chicken Sandwich", "Hotdog", "Fries", "Beverages"};
        break;
        case 5:
        prices = new double[]{32.00, 35.00, 30.00, 38.00, 40.00, 25.00, 25.00, 20.00};
        itemNames = new String[]{"Burgers", "Burger Steak", "Chicken", "Spaghetti", "Chicken Sandwich", "Hotdog", "Fries", "Beverages"};
        break;
        case 6:
        prices = new double[]{32.00, 35.00, 30.00, 38.00, 40.00, 25.00, 25.00, 20.00};
        itemNames = new String[]{"Burgers", "Burger Steak", "Chicken", "Spaghetti", "Chicken Sandwich", "Hotdog", "Fries", "Beverages"};
        break;
        case 7:
        prices = new double[]{32.00, 35.00, 30.00, 38.00, 40.00, 25.00, 25.00, 20.00};
        itemNames = new String[]{"Burgers", "Burger Steak", "Chicken", "Spaghetti", "Chicken Sandwich", "Hotdog", "Fries", "Beverages"};
        break;
        case 8:
        prices = new double[]{32.00, 35.00, 30.00, 38.00, 40.00, 25.00, 25.00, 20.00};
        itemNames = new String[]{"Burgers", "Burger Steak", "Chicken", "Spaghetti", "Chicken Sandwich", "Hotdog", "Fries", "Beverages"};
        break;
        }
        
        System.out.println(itemNames[0] + " Sub-Menu:");
        for (int i = 0; i < prices.length; i++) {
            System.out.println("[" + (i + 1) + "] " + itemNames[i] + " : " + prices[i] + " - Stock: " + stocks[i]);
        }

        System.out.print("\nEnter your choice again: ");
        int choice = scanner.nextInt();

        if (choice < 1 || choice > prices.length) {
            System.out.println("\nInvalid choice. Please try again.");
            return 0.0;
        }

        System.out.print(itemNames[choice - 1] + " - Qty: ");
        int qty = scanner.nextInt();

        if (qty > stocks[choice - 1]) {
            System.out.println("\nInsufficient stock. Please try again.");
            return 0.0;
        }

        stocks[choice - 1] -= qty;

        double itemTotal = prices[choice - 1] * qty;
        return itemTotal;
    }

    public static double processPayment(double total, Scanner scanner) {
        double payment;
        while (true) {
            System.out.print("\nEnter Payment (Cash): ");
            payment = scanner.nextDouble();
            if (payment >= total) {
                double change = payment - total;
                System.out.println("Change: " + change);
                System.out.println("\nThank you for Ordering. Enjoy!");
                return payment;
            } else {
                System.out.println("\nInsufficient Cash!!!");
                System.out.println("Please Try Again!");
            }
        }
    }

    public static void updateInventoryStock(int[] stocks) {
        System.out.println("\n===== UPDATED INVENTORY STOCK =====");
        for (int i = 0; i < stocks.length; i++) {
            System.out.println("[" + (i + 1) + "] Stock for Item: " + stocks[i]);
        }
        System.out.println("===============================");
    }

    public static void printReceipt(String username, int ID, double total, double payment) {
        double change = payment - total;
        System.out.println("\n===== RECEIPT =====");
        System.out.println("Username: " + username);
        System.out.println("ID Number: " + ID);
        System.out.println("Total: " + total);
        System.out.println("Payment: " + payment);
        System.out.println("Change: " + change);
        System.out.println("Thank you for Ordering with us. Enjoy!");
        System.out.println("============================");
    }

    public static void deleteItem(Scanner scanner, int[] stocks) {
        System.out.println("\nDELETE ITEM MENU");
        System.out.println("\nSelect item to delete:");

        // Display items
        for (int i = 0; i < stocks.length; i++) {
            System.out.println("[" + (i + 1) + "] Stock for Item: " + stocks[i]);
        }

        System.out.print("\nEnter item number to delete: ");
        int itemToDelete = scanner.nextInt();

        if (itemToDelete < 1 || itemToDelete > stocks.length) {
            System.out.println("\nInvalid item number. Please try again.");
            return;
        }

        // Confirm deletion
        System.out.print("\nAre you sure you want to delete item " + itemToDelete + "? (Y/N): ");
        String confirmDelete = scanner.next();

        if (confirmDelete.equalsIgnoreCase("Y")) {
            stocks[itemToDelete - 1] = INITIAL_STOCK;
            System.out.println("\nItem " + itemToDelete + " deleted successfully. Stock reset to initial value.");
        } else {
            System.out.println("\nDeletion canceled.");
        }
    }
}
